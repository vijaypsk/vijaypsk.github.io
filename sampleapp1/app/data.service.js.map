{"version":3,"file":"data.service.js","sourceRoot":"","sources":["data.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAuD,eAAe,CAAC,CAAA;AACvE,2BAA+B,iBAAiB,CAAC,CAAA;AACjD,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,yBAAyB,CAAC,CAAA;AAGjC;IAIE,yEAAyE;IAEzE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QALtB,YAAO,GAAG,yCAAyC,CAAC;QAC5D,8EAA8E;QACtE,qBAAgB,GAAG,mCAAmC,CAAC,CAAE,iBAAiB;IAGhD,CAAC;IACnC,6BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;aAC/B,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAE7B,CAAC;IAED,mCAAa,GAAb,UAAc,KAAa,EAAC,IAAY;QACtC,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,GAAC,IAAI,GAAC,GAAG,GAAC,KAAK,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAC,GAAG,CAAC,CAAC;QAEtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACP,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAE5C,CAAC;IAGO,iCAAW,GAAnB,UAAoB,GAAa;QAC/B,0BAA0B;QAC1B,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAE5B,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC1C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QAC1E,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IArCH;QAAC,iBAAU,EAAE;;mBAAA;IAsCb,kBAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,mBAAW,cAqCvB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Response, Headers,RequestOptions } from '@angular/http';\nimport { Observable }     from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class DataService {\n  private dataUrl = 'http://104.197.198.248:8000/definitions';\n  //private indicatordataUrl = 'http://localhost:8000/data/';  // URL to web API\n  private indicatordataUrl = 'http://104.197.198.248:8000/data/';  // URL to web API\n  //private dataUrl = 'http://localhost:8000/data/2012';  // URL to web API\n\n  constructor(private http: Http) { }\n  getData(): Observable<any> {\n    return this.http.get(this.dataUrl)\n      .map(this.extractData)\n      .catch(this.handleError);\n\n  }\n  \n  getResultData(icode: string,year: string): Observable<any> {\n    var url = this.indicatordataUrl+year+'/'+icode;\n      console.log(\"DataService url \"+url);\n\n    return this.http.get(url)\n                     .map(this.extractData)\n                     .catch(this.handleError);\n\n  }\n\n\n  private extractData(res: Response) {\n    //console.log(res.json());\n    return res.json();\n  }\n  \n  private handleError(error: any) {\n\n    let errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(errMsg); // log to console instead\n    return Observable.throw(errMsg);\n  }\n}\n"]}